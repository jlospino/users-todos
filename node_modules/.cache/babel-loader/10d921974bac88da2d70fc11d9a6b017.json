{"ast":null,"code":"import config from '../helpers/config';\nimport { authHeader } from '../helpers/auth-header';\nexport const userService = {\n  login,\n  logout,\n  getById\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions).then(handleResponse).then(user => {\n    // login successful if there's a jwt token in the response\n    if (user.token) {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}","map":{"version":3,"names":["config","authHeader","userService","login","logout","getById","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","apiUrl","then","handleResponse","user","token","localStorage","setItem","removeItem","id"],"sources":["C:/Users/SERDAN-DESARROLLO/Desktop/VueJS/src/services/userServices.js"],"sourcesContent":["import config from '../helpers/config';\r\nimport { authHeader } from '../helpers/auth-header';\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    getById,\r\n};\r\n\r\nfunction login(username, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }\r\n\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\r\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG;EACvBC,KADuB;EAEvBC,MAFuB;EAGvBC;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;EAC/B,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MADW;IAEnBC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFU;IAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,QAAF;MAAYC;IAAZ,CAAf;EAHa,CAAvB;EAMA,OAAOO,KAAK,CAAE,GAAEd,MAAM,CAACe,MAAO,qBAAlB,EAAwCP,cAAxC,CAAL,CACFQ,IADE,CACGC,cADH,EAEFD,IAFE,CAEGE,IAAI,IAAI;IACV;IACA,IAAIA,IAAI,CAACC,KAAT,EAAgB;MACZ;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACC,SAAL,CAAeK,IAAf,CAA7B;IACH;;IAED,OAAOA,IAAP;EACH,CAVE,CAAP;AAWH;;AAED,SAASd,MAAT,GAAkB;EACd;EACAgB,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASjB,OAAT,CAAiBkB,EAAjB,EAAqB;EACjB,MAAMf,cAAc,GAAG;IACnBC,MAAM,EAAE,KADW;IAEnBC,OAAO,EAAET,UAAU;EAFA,CAAvB;EAKA,OAAOa,KAAK,CAAE,GAAEd,MAAM,CAACe,MAAO,UAASQ,EAAG,EAA9B,EAAiCf,cAAjC,CAAL,CAAsDQ,IAAtD,CAA2DC,cAA3D,CAAP;AACH"},"metadata":{},"sourceType":"module"}