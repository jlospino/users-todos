{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"TableUsersToDos\",\n  props: {\n    userId: String\n  },\n\n  created() {\n    this.getUserToDos();\n  },\n\n  data() {\n    return {\n      filter: 'all',\n      todos_filter: [],\n      todos: [],\n      todo: ''\n    };\n  },\n\n  methods: {\n    getUserToDos() {\n      if (localStorage.getItem(\"todos\")) {\n        this.todos = JSON.parse(localStorage.getItem(\"todos\"));\n      } else {\n        axios.get(`https://jsonplaceholder.typicode.com/todos?userId=${this.userId}`).then(res => {\n          this.todos = res.data;\n          localStorage.setItem(\"todos\", JSON.stringify(res.data));\n        });\n      }\n\n      this.todos = JSON.parse(localStorage.getItem(\"todos\"));\n      this.todos_filter = this.todos;\n    },\n\n    filterToDos(state) {\n      this.filter = state;\n\n      if (state === 'all') {\n        this.todos_filter = this.todos;\n      } else {\n        this.todos_filter = this.todos.filter(function (todo) {\n          return state === 'pending' ? todo.completed == false : todo.completed == true;\n        });\n      }\n    },\n\n    addToDo() {\n      if (this.todo === '') return;\n      const newTodo = {\n        completed: false,\n        title: this.todo,\n        id: this.todos[this.todos.lenght - 1] + 1,\n        userId: this.userId\n      };\n      const currentTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      localStorage.setItem(\"todos\", JSON.stringify({ ...currentTodos,\n        newTodo\n      }));\n      this.getUserToDos();\n    },\n\n    removeToDo(id) {\n      console.log(id);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsDA;AACA;EACAA,uBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;EACA,CAPA;;EAQAC;IACA;MACAC,aADA;MAEAC,gBAFA;MAGAC,SAHA;MAIAC;IAJA;EAMA,CAfA;;EAgBAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACAC,8EACAC,IADA,CACAC;UACA;UACAC;QACA,CAJA;MAKA;;MACA;MACA;IAEA,CAdA;;IAeAC;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;UACA;QACA,CAFA;MAGA;IACA,CAxBA;;IAyBAC;MACA;MAEA;QACAC,gBADA;QAEAC,gBAFA;QAGAC,yCAHA;QAIAjB;MAJA;MAMA;MACAY;QAAAM;MAAA;MACA;IACA,CArCA;;IAsCAC;MACAC;IACA;;EAxCA;AAhBA","names":["name","props","userId","created","data","filter","todos_filter","todos","todo","methods","getUserToDos","axios","then","res","localStorage","filterToDos","addToDo","completed","title","id","newTodo","removeToDo","console"],"sourceRoot":"src/components/users","sources":["TableUserToDos.vue"],"sourcesContent":["<template>\r\n    <div class=\"todos-list\">\r\n        <div class=\"task-input\">\r\n            <span class=\"material-symbols-outlined task-input-icon\">\r\n                splitscreen\r\n            </span>\r\n            <input type=\"text\" v-model=\"todo\" placeholder=\"Add a new task\">\r\n            <button \r\n                class=\"\"\r\n                @click=\"addToDo()\"\r\n            >\r\n                Add\r\n            </button>\r\n        </div>\r\n        <div class=\"controls\">\r\n            <div class=\"filters\">\r\n                <span \r\n                    :class=\"{'active': filter == 'all'}\"\r\n                    @click=\"filterToDos('all')\"\r\n                >\r\n                    All\r\n                </span>\r\n                <span \r\n                    :class=\"{'active': filter == 'pending'}\"\r\n                    @click=\"filterToDos('pending')\"\r\n                >\r\n                    Pending\r\n                </span>\r\n                <span \r\n                    :class=\"{'active': filter == 'completed'}\"\r\n                    @click=\"filterToDos('completed')\"\r\n                >\r\n                    Completed\r\n                </span>\r\n            </div> \r\n        </div>\r\n        <ul class=\"task-box\" v-if=\"todos_filter.length > 0\">\r\n            <li class=\"task\" v-for=\"(todo, index) in todos_filter\" :key=\"index\">\r\n                <label :for=\"`${todo.id}`\">\r\n                    <input type=\"checkbox\" :id=\"`${todo.id}`\" :checked=\"todo.completed\" />\r\n                    <p :class=\"`${todo.completed ? 'active_task' : ''}`\">{{ todo.title }}</p>\r\n                </label>\r\n                <button \r\n                    class=\"button_small\"\r\n                    @click=\"removeToDo(todo.id)\"\r\n                >\r\n                    Eliminar\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: \"TableUsersToDos\",\r\n    props:{\r\n        userId: String\r\n    },\r\n    created(){\r\n        this.getUserToDos();\r\n    },\r\n    data() {\r\n        return {\r\n            filter: 'all',\r\n            todos_filter: [],\r\n            todos: [],\r\n            todo: ''\r\n        }\r\n    },\r\n    methods:{\r\n        getUserToDos() {\r\n            if(localStorage.getItem(\"todos\")){\r\n                this.todos = JSON.parse(localStorage.getItem(\"todos\"));\r\n            }else{\r\n                axios.get(`https://jsonplaceholder.typicode.com/todos?userId=${this.userId}`)\r\n                .then((res) => {\r\n                    this.todos = res.data;\r\n                    localStorage.setItem(\"todos\", JSON.stringify(res.data));\r\n                });\r\n            }\r\n            this.todos = JSON.parse(localStorage.getItem(\"todos\"));\r\n            this.todos_filter = this.todos;\r\n            \r\n        },\r\n        filterToDos(state){\r\n            this.filter = state;\r\n            if(state === 'all'){\r\n                this.todos_filter = this.todos;\r\n            }else{\r\n                this.todos_filter = this.todos.filter( function(todo) {\r\n                    return state === 'pending' ? todo.completed == false : todo.completed == true;\r\n                });\r\n            }\r\n        },\r\n        addToDo(){\r\n            if ( this.todo === '' ) return;\r\n            \r\n            const newTodo = {\r\n                completed: false,\r\n                title: this.todo,\r\n                id: this.todos[this.todos.lenght - 1] + 1,\r\n                userId: this.userId\r\n            }\r\n            const currentTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n            localStorage.setItem(\"todos\", JSON.stringify({ ...currentTodos, newTodo }))\r\n            this.getUserToDos();\r\n        },\r\n        removeToDo(id){\r\n            console.log(id)\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}